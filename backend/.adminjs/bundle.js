(function (React, designSystem, adminjs) {
	'use strict';

	function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

	var React__default = /*#__PURE__*/_interopDefault(React);

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getAugmentedNamespace(n) {
	  if (n.__esModule) return n;
	  var f = n.default;
		if (typeof f == "function") {
			var a = function a () {
				if (this instanceof a) {
	        return Reflect.construct(f, arguments, this.constructor);
				}
				return f.apply(this, arguments);
			};
			a.prototype = f.prototype;
	  } else a = {};
	  Object.defineProperty(a, '__esModule', {value: true});
		Object.keys(n).forEach(function (k) {
			var d = Object.getOwnPropertyDescriptor(n, k);
			Object.defineProperty(a, k, d.get ? d : {
				enumerable: true,
				get: function () {
					return n[k];
				}
			});
		});
		return a;
	}

	var styledComponents_browser_cjs = {};

	/******************************************************************************
	Copyright (c) Microsoft Corporation.

	Permission to use, copy, modify, and/or distribute this software for any
	purpose with or without fee is hereby granted.

	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	PERFORMANCE OF THIS SOFTWARE.
	***************************************************************************** */
	/* global Reflect, Promise, SuppressedError, Symbol */

	var extendStatics = function (d, b) {
	  extendStatics = Object.setPrototypeOf || {
	    __proto__: []
	  } instanceof Array && function (d, b) {
	    d.__proto__ = b;
	  } || function (d, b) {
	    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
	  };
	  return extendStatics(d, b);
	};
	function __extends(d, b) {
	  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
	  extendStatics(d, b);
	  function __() {
	    this.constructor = d;
	  }
	  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	}
	var __assign = function () {
	  __assign = Object.assign || function __assign(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	      s = arguments[i];
	      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	    }
	    return t;
	  };
	  return __assign.apply(this, arguments);
	};
	function __rest(s, e) {
	  var t = {};
	  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
	  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
	  }
	  return t;
	}
	function __decorate(decorators, target, key, desc) {
	  var c = arguments.length,
	    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	    d;
	  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	  return c > 3 && r && Object.defineProperty(target, key, r), r;
	}
	function __param(paramIndex, decorator) {
	  return function (target, key) {
	    decorator(target, key, paramIndex);
	  };
	}
	function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
	  function accept(f) {
	    if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
	    return f;
	  }
	  var kind = contextIn.kind,
	    key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
	  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
	  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
	  var _,
	    done = false;
	  for (var i = decorators.length - 1; i >= 0; i--) {
	    var context = {};
	    for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
	    for (var p in contextIn.access) context.access[p] = contextIn.access[p];
	    context.addInitializer = function (f) {
	      if (done) throw new TypeError("Cannot add initializers after decoration has completed");
	      extraInitializers.push(accept(f || null));
	    };
	    var result = (0, decorators[i])(kind === "accessor" ? {
	      get: descriptor.get,
	      set: descriptor.set
	    } : descriptor[key], context);
	    if (kind === "accessor") {
	      if (result === void 0) continue;
	      if (result === null || typeof result !== "object") throw new TypeError("Object expected");
	      if (_ = accept(result.get)) descriptor.get = _;
	      if (_ = accept(result.set)) descriptor.set = _;
	      if (_ = accept(result.init)) initializers.unshift(_);
	    } else if (_ = accept(result)) {
	      if (kind === "field") initializers.unshift(_);else descriptor[key] = _;
	    }
	  }
	  if (target) Object.defineProperty(target, contextIn.name, descriptor);
	  done = true;
	}
	function __runInitializers(thisArg, initializers, value) {
	  var useValue = arguments.length > 2;
	  for (var i = 0; i < initializers.length; i++) {
	    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
	  }
	  return useValue ? value : void 0;
	}
	function __propKey(x) {
	  return typeof x === "symbol" ? x : "".concat(x);
	}
	function __setFunctionName(f, name, prefix) {
	  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
	  return Object.defineProperty(f, "name", {
	    configurable: true,
	    value: prefix ? "".concat(prefix, " ", name) : name
	  });
	}
	function __metadata(metadataKey, metadataValue) {
	  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
	}
	function __awaiter(thisArg, _arguments, P, generator) {
	  function adopt(value) {
	    return value instanceof P ? value : new P(function (resolve) {
	      resolve(value);
	    });
	  }
	  return new (P || (P = Promise))(function (resolve, reject) {
	    function fulfilled(value) {
	      try {
	        step(generator.next(value));
	      } catch (e) {
	        reject(e);
	      }
	    }
	    function rejected(value) {
	      try {
	        step(generator["throw"](value));
	      } catch (e) {
	        reject(e);
	      }
	    }
	    function step(result) {
	      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
	    }
	    step((generator = generator.apply(thisArg, _arguments || [])).next());
	  });
	}
	function __generator(thisArg, body) {
	  var _ = {
	      label: 0,
	      sent: function () {
	        if (t[0] & 1) throw t[1];
	        return t[1];
	      },
	      trys: [],
	      ops: []
	    },
	    f,
	    y,
	    t,
	    g;
	  return g = {
	    next: verb(0),
	    "throw": verb(1),
	    "return": verb(2)
	  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
	    return this;
	  }), g;
	  function verb(n) {
	    return function (v) {
	      return step([n, v]);
	    };
	  }
	  function step(op) {
	    if (f) throw new TypeError("Generator is already executing.");
	    while (g && (g = 0, op[0] && (_ = 0)), _) try {
	      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	      if (y = 0, t) op = [op[0] & 2, t.value];
	      switch (op[0]) {
	        case 0:
	        case 1:
	          t = op;
	          break;
	        case 4:
	          _.label++;
	          return {
	            value: op[1],
	            done: false
	          };
	        case 5:
	          _.label++;
	          y = op[1];
	          op = [0];
	          continue;
	        case 7:
	          op = _.ops.pop();
	          _.trys.pop();
	          continue;
	        default:
	          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
	            _ = 0;
	            continue;
	          }
	          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
	            _.label = op[1];
	            break;
	          }
	          if (op[0] === 6 && _.label < t[1]) {
	            _.label = t[1];
	            t = op;
	            break;
	          }
	          if (t && _.label < t[2]) {
	            _.label = t[2];
	            _.ops.push(op);
	            break;
	          }
	          if (t[2]) _.ops.pop();
	          _.trys.pop();
	          continue;
	      }
	      op = body.call(thisArg, _);
	    } catch (e) {
	      op = [6, e];
	      y = 0;
	    } finally {
	      f = t = 0;
	    }
	    if (op[0] & 5) throw op[1];
	    return {
	      value: op[0] ? op[1] : void 0,
	      done: true
	    };
	  }
	}
	var __createBinding = Object.create ? function (o, m, k, k2) {
	  if (k2 === undefined) k2 = k;
	  var desc = Object.getOwnPropertyDescriptor(m, k);
	  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
	    desc = {
	      enumerable: true,
	      get: function () {
	        return m[k];
	      }
	    };
	  }
	  Object.defineProperty(o, k2, desc);
	} : function (o, m, k, k2) {
	  if (k2 === undefined) k2 = k;
	  o[k2] = m[k];
	};
	function __exportStar(m, o) {
	  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
	}
	function __values(o) {
	  var s = typeof Symbol === "function" && Symbol.iterator,
	    m = s && o[s],
	    i = 0;
	  if (m) return m.call(o);
	  if (o && typeof o.length === "number") return {
	    next: function () {
	      if (o && i >= o.length) o = void 0;
	      return {
	        value: o && o[i++],
	        done: !o
	      };
	    }
	  };
	  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	}
	function __read(o, n) {
	  var m = typeof Symbol === "function" && o[Symbol.iterator];
	  if (!m) return o;
	  var i = m.call(o),
	    r,
	    ar = [],
	    e;
	  try {
	    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	  } catch (error) {
	    e = {
	      error: error
	    };
	  } finally {
	    try {
	      if (r && !r.done && (m = i["return"])) m.call(i);
	    } finally {
	      if (e) throw e.error;
	    }
	  }
	  return ar;
	}

	/** @deprecated */
	function __spread() {
	  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	  return ar;
	}

	/** @deprecated */
	function __spreadArrays() {
	  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
	  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
	  return r;
	}
	function __spreadArray(to, from, pack) {
	  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
	    if (ar || !(i in from)) {
	      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
	      ar[i] = from[i];
	    }
	  }
	  return to.concat(ar || Array.prototype.slice.call(from));
	}
	function __await(v) {
	  return this instanceof __await ? (this.v = v, this) : new __await(v);
	}
	function __asyncGenerator(thisArg, _arguments, generator) {
	  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	  var g = generator.apply(thisArg, _arguments || []),
	    i,
	    q = [];
	  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	    return this;
	  }, i;
	  function verb(n) {
	    if (g[n]) i[n] = function (v) {
	      return new Promise(function (a, b) {
	        q.push([n, v, a, b]) > 1 || resume(n, v);
	      });
	    };
	  }
	  function resume(n, v) {
	    try {
	      step(g[n](v));
	    } catch (e) {
	      settle(q[0][3], e);
	    }
	  }
	  function step(r) {
	    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
	  }
	  function fulfill(value) {
	    resume("next", value);
	  }
	  function reject(value) {
	    resume("throw", value);
	  }
	  function settle(f, v) {
	    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
	  }
	}
	function __asyncDelegator(o) {
	  var i, p;
	  return i = {}, verb("next"), verb("throw", function (e) {
	    throw e;
	  }), verb("return"), i[Symbol.iterator] = function () {
	    return this;
	  }, i;
	  function verb(n, f) {
	    i[n] = o[n] ? function (v) {
	      return (p = !p) ? {
	        value: __await(o[n](v)),
	        done: false
	      } : f ? f(v) : v;
	    } : f;
	  }
	}
	function __asyncValues(o) {
	  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	  var m = o[Symbol.asyncIterator],
	    i;
	  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	    return this;
	  }, i);
	  function verb(n) {
	    i[n] = o[n] && function (v) {
	      return new Promise(function (resolve, reject) {
	        v = o[n](v), settle(resolve, reject, v.done, v.value);
	      });
	    };
	  }
	  function settle(resolve, reject, d, v) {
	    Promise.resolve(v).then(function (v) {
	      resolve({
	        value: v,
	        done: d
	      });
	    }, reject);
	  }
	}
	function __makeTemplateObject(cooked, raw) {
	  if (Object.defineProperty) {
	    Object.defineProperty(cooked, "raw", {
	      value: raw
	    });
	  } else {
	    cooked.raw = raw;
	  }
	  return cooked;
	}
	var __setModuleDefault = Object.create ? function (o, v) {
	  Object.defineProperty(o, "default", {
	    enumerable: true,
	    value: v
	  });
	} : function (o, v) {
	  o["default"] = v;
	};
	function __importStar(mod) {
	  if (mod && mod.__esModule) return mod;
	  var result = {};
	  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
	  __setModuleDefault(result, mod);
	  return result;
	}
	function __importDefault(mod) {
	  return mod && mod.__esModule ? mod : {
	    default: mod
	  };
	}
	function __classPrivateFieldGet(receiver, state, kind, f) {
	  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
	  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
	  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
	}
	function __classPrivateFieldSet(receiver, state, value, kind, f) {
	  if (kind === "m") throw new TypeError("Private method is not writable");
	  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
	  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
	  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
	}
	function __classPrivateFieldIn(state, receiver) {
	  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
	  return typeof state === "function" ? receiver === state : state.has(receiver);
	}
	function __addDisposableResource(env, value, async) {
	  if (value !== null && value !== void 0) {
	    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
	    var dispose;
	    if (async) {
	      if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
	      dispose = value[Symbol.asyncDispose];
	    }
	    if (dispose === void 0) {
	      if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
	      dispose = value[Symbol.dispose];
	    }
	    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
	    env.stack.push({
	      value: value,
	      dispose: dispose,
	      async: async
	    });
	  } else if (async) {
	    env.stack.push({
	      async: true
	    });
	  }
	  return value;
	}
	var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
	  var e = new Error(message);
	  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
	};
	function __disposeResources(env) {
	  function fail(e) {
	    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
	    env.hasError = true;
	  }
	  function next() {
	    while (env.stack.length) {
	      var rec = env.stack.pop();
	      try {
	        var result = rec.dispose && rec.dispose.call(rec.value);
	        if (rec.async) return Promise.resolve(result).then(next, function (e) {
	          fail(e);
	          return next();
	        });
	      } catch (e) {
	        fail(e);
	      }
	    }
	    if (env.hasError) throw env.error;
	  }
	  return next();
	}
	var tslib_es6 = {
	  __extends,
	  __assign,
	  __rest,
	  __decorate,
	  __param,
	  __metadata,
	  __awaiter,
	  __generator,
	  __createBinding,
	  __exportStar,
	  __values,
	  __read,
	  __spread,
	  __spreadArrays,
	  __spreadArray,
	  __await,
	  __asyncGenerator,
	  __asyncDelegator,
	  __asyncValues,
	  __makeTemplateObject,
	  __importStar,
	  __importDefault,
	  __classPrivateFieldGet,
	  __classPrivateFieldSet,
	  __classPrivateFieldIn,
	  __addDisposableResource,
	  __disposeResources
	};

	var tslib_es6$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		__addDisposableResource: __addDisposableResource,
		get __assign () { return __assign; },
		__asyncDelegator: __asyncDelegator,
		__asyncGenerator: __asyncGenerator,
		__asyncValues: __asyncValues,
		__await: __await,
		__awaiter: __awaiter,
		__classPrivateFieldGet: __classPrivateFieldGet,
		__classPrivateFieldIn: __classPrivateFieldIn,
		__classPrivateFieldSet: __classPrivateFieldSet,
		__createBinding: __createBinding,
		__decorate: __decorate,
		__disposeResources: __disposeResources,
		__esDecorate: __esDecorate,
		__exportStar: __exportStar,
		__extends: __extends,
		__generator: __generator,
		__importDefault: __importDefault,
		__importStar: __importStar,
		__makeTemplateObject: __makeTemplateObject,
		__metadata: __metadata,
		__param: __param,
		__propKey: __propKey,
		__read: __read,
		__rest: __rest,
		__runInitializers: __runInitializers,
		__setFunctionName: __setFunctionName,
		__spread: __spread,
		__spreadArray: __spreadArray,
		__spreadArrays: __spreadArrays,
		__values: __values,
		default: tslib_es6
	});

	var require$$0 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$1);

	function memoize(fn) {
	  var cache = Object.create(null);
	  return function (arg) {
	    if (cache[arg] === undefined) cache[arg] = fn(arg);
	    return cache[arg];
	  };
	}

	var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

	var isPropValid = /* #__PURE__ */memoize(function (prop) {
	  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
	  /* o */
	  && prop.charCodeAt(1) === 110
	  /* n */
	  && prop.charCodeAt(2) < 91;
	}
	/* Z+1 */
	);

	var emotionIsPropValid_esm = /*#__PURE__*/Object.freeze({
		__proto__: null,
		default: isPropValid
	});

	var require$$1 = /*@__PURE__*/getAugmentedNamespace(emotionIsPropValid_esm);

	//

	var shallowequal = function shallowEqual(objA, objB, compare, compareContext) {
	  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

	  if (ret !== void 0) {
	    return !!ret;
	  }

	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

	  // Test for A's keys different from B.
	  for (var idx = 0; idx < keysA.length; idx++) {
	    var key = keysA[idx];

	    if (!bHasOwnProperty(key)) {
	      return false;
	    }

	    var valueA = objA[key];
	    var valueB = objB[key];

	    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

	    if (ret === false || (ret === void 0 && valueA !== valueB)) {
	      return false;
	    }
	  }

	  return true;
	};

	var stylis = {exports: {}};

	(function (module, exports) {
		(function(e,r){r(exports);})(commonjsGlobal,(function(e){var r="-ms-";var a="-moz-";var c="-webkit-";var n="comm";var t="rule";var s="decl";var i="@page";var u="@media";var o="@import";var l="@charset";var f="@viewport";var p="@supports";var h="@document";var v="@namespace";var b="@keyframes";var d="@font-face";var w="@counter-style";var m="@font-feature-values";var g="@layer";var k="@scope";var $=Math.abs;var x=String.fromCharCode;var E=Object.assign;function y(e,r){return M(e,0)^45?(((r<<2^M(e,0))<<2^M(e,1))<<2^M(e,2))<<2^M(e,3):0}function O(e){return e.trim()}function T(e,r){return (e=r.exec(e))?e[0]:e}function A(e,r,a){return e.replace(r,a)}function C(e,r,a){return e.indexOf(r,a)}function M(e,r){return e.charCodeAt(r)|0}function S(e,r,a){return e.slice(r,a)}function R(e){return e.length}function P(e){return e.length}function z(e,r){return r.push(e),e}function N(e,r){return e.map(r).join("")}function j(e,r){return e.filter((function(e){return !T(e,r)}))}e.line=1;e.column=1;e.length=0;e.position=0;e.character=0;e.characters="";function U(r,a,c,n,t,s,i,u){return {value:r,root:a,parent:c,type:n,props:t,children:s,line:e.line,column:e.column,length:i,return:"",siblings:u}}function _(e,r){return E(U("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},r)}function F(e){while(e.root)e=_(e.root,{children:[e]});z(e,e.siblings);}function I(){return e.character}function L(){e.character=e.position>0?M(e.characters,--e.position):0;if(e.column--,e.character===10)e.column=1,e.line--;return e.character}function D(){e.character=e.position<e.length?M(e.characters,e.position++):0;if(e.column++,e.character===10)e.column=1,e.line++;return e.character}function Y(){return M(e.characters,e.position)}function K(){return e.position}function V(r,a){return S(e.characters,r,a)}function W(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function B(r){return e.line=e.column=1,e.length=R(e.characters=r),e.position=0,[]}function G(r){return e.characters="",r}function H(r){return O(V(e.position-1,X(r===91?r+2:r===40?r+1:r)))}function Z(e){return G(J(B(e)))}function q(r){while(e.character=Y())if(e.character<33)D();else break;return W(r)>2||W(e.character)>3?"":" "}function J(r){while(D())switch(W(e.character)){case 0:z(re(e.position-1),r);break;case 2:z(H(e.character),r);break;default:z(x(e.character),r);}return r}function Q(r,a){while(--a&&D())if(e.character<48||e.character>102||e.character>57&&e.character<65||e.character>70&&e.character<97)break;return V(r,K()+(a<6&&Y()==32&&D()==32))}function X(r){while(D())switch(e.character){case r:return e.position;case 34:case 39:if(r!==34&&r!==39)X(e.character);break;case 40:if(r===41)X(r);break;case 92:D();break}return e.position}function ee(r,a){while(D())if(r+e.character===47+10)break;else if(r+e.character===42+42&&Y()===47)break;return "/*"+V(a,e.position-1)+"*"+x(r===47?r:D())}function re(r){while(!W(Y()))D();return V(r,e.position)}function ae(e){return G(ce("",null,null,null,[""],e=B(e),0,[0],e))}function ce(e,r,a,c,n,t,s,i,u){var o=0;var l=0;var f=s;var p=0;var h=0;var v=0;var b=1;var d=1;var w=1;var m=0;var g="";var k=n;var E=t;var y=c;var O=g;while(d)switch(v=m,m=D()){case 40:if(v!=108&&M(O,f-1)==58){if(C(O+=A(H(m),"&","&\f"),"&\f",$(o?i[o-1]:0))!=-1)w=-1;break}case 34:case 39:case 91:O+=H(m);break;case 9:case 10:case 13:case 32:O+=q(v);break;case 92:O+=Q(K()-1,7);continue;case 47:switch(Y()){case 42:case 47:z(te(ee(D(),K()),r,a,u),u);break;default:O+="/";}break;case 123*b:i[o++]=R(O)*w;case 125*b:case 59:case 0:switch(m){case 0:case 125:d=0;case 59+l:if(w==-1)O=A(O,/\f/g,"");if(h>0&&R(O)-f)z(h>32?se(O+";",c,a,f-1,u):se(A(O," ","")+";",c,a,f-2,u),u);break;case 59:O+=";";default:z(y=ne(O,r,a,o,l,n,i,g,k=[],E=[],f,t),t);if(m===123)if(l===0)ce(O,r,y,y,k,t,f,i,E);else switch(p===99&&M(O,3)===110?100:p){case 100:case 108:case 109:case 115:ce(e,y,y,c&&z(ne(e,y,y,0,0,n,i,g,n,k=[],f,E),E),n,E,f,i,c?k:E);break;default:ce(O,y,y,y,[""],E,0,i,E);}}o=l=h=0,b=w=1,g=O="",f=s;break;case 58:f=1+R(O),h=v;default:if(b<1)if(m==123)--b;else if(m==125&&b++==0&&L()==125)continue;switch(O+=x(m),m*b){case 38:w=l>0?1:(O+="\f",-1);break;case 44:i[o++]=(R(O)-1)*w,w=1;break;case 64:if(Y()===45)O+=H(D());p=Y(),l=f=R(g=O+=re(K())),m++;break;case 45:if(v===45&&R(O)==2)b=0;}}return t}function ne(e,r,a,c,n,s,i,u,o,l,f,p){var h=n-1;var v=n===0?s:[""];var b=P(v);for(var d=0,w=0,m=0;d<c;++d)for(var g=0,k=S(e,h+1,h=$(w=i[d])),x=e;g<b;++g)if(x=O(w>0?v[g]+" "+k:A(k,/&\f/g,v[g])))o[m++]=x;return U(e,r,a,n===0?t:u,o,l,f,p)}function te(e,r,a,c){return U(e,r,a,n,x(I()),S(e,2,-2),0,c)}function se(e,r,a,c,n){return U(e,r,a,s,S(e,0,c),S(e,c+1,-1),c,n)}function ie(e,n,t){switch(y(e,n)){case 5103:return c+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return c+e+e;case 4789:return a+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return c+e+a+e+r+e+e;case 5936:switch(M(e,n+11)){case 114:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return c+e+r+e+e;case 6165:return c+e+r+"flex-"+e+e;case 5187:return c+e+A(e,/(\w+).+(:[^]+)/,c+"box-$1$2"+r+"flex-$1$2")+e;case 5443:return c+e+r+"flex-item-"+A(e,/flex-|-self/g,"")+(!T(e,/flex-|baseline/)?r+"grid-row-"+A(e,/flex-|-self/g,""):"")+e;case 4675:return c+e+r+"flex-line-pack"+A(e,/align-content|flex-|-self/g,"")+e;case 5548:return c+e+r+A(e,"shrink","negative")+e;case 5292:return c+e+r+A(e,"basis","preferred-size")+e;case 6060:return c+"box-"+A(e,"-grow","")+c+e+r+A(e,"grow","positive")+e;case 4554:return c+A(e,/([^-])(transform)/g,"$1"+c+"$2")+e;case 6187:return A(A(A(e,/(zoom-|grab)/,c+"$1"),/(image-set)/,c+"$1"),e,"")+e;case 5495:case 3959:return A(e,/(image-set\([^]*)/,c+"$1"+"$`$1");case 4968:return A(A(e,/(.+:)(flex-)?(.*)/,c+"box-pack:$3"+r+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+c+e+e;case 4200:if(!T(e,/flex-|baseline/))return r+"grid-column-align"+S(e,n)+e;break;case 2592:case 3360:return r+A(e,"template-","")+e;case 4384:case 3616:if(t&&t.some((function(e,r){return n=r,T(e.props,/grid-\w+-end/)}))){return ~C(e+(t=t[n].value),"span",0)?e:r+A(e,"-start","")+e+r+"grid-row-span:"+(~C(t,"span",0)?T(t,/\d+/):+T(t,/\d+/)-+T(e,/\d+/))+";"}return r+A(e,"-start","")+e;case 4896:case 4128:return t&&t.some((function(e){return T(e.props,/grid-\w+-start/)}))?e:r+A(A(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return A(e,/(.+)-inline(.+)/,c+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(R(e)-1-n>6)switch(M(e,n+1)){case 109:if(M(e,n+4)!==45)break;case 102:return A(e,/(.+:)(.+)-([^]+)/,"$1"+c+"$2-$3"+"$1"+a+(M(e,n+3)==108?"$3":"$2-$3"))+e;case 115:return ~C(e,"stretch",0)?ie(A(e,"stretch","fill-available"),n,t)+e:e}break;case 5152:case 5920:return A(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(a,c,n,t,s,i,u){return r+c+":"+n+u+(t?r+c+"-span:"+(s?i:+i-+n)+u:"")+e}));case 4949:if(M(e,n+6)===121)return A(e,":",":"+c)+e;break;case 6444:switch(M(e,M(e,14)===45?18:11)){case 120:return A(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+c+(M(e,14)===45?"inline-":"")+"box$3"+"$1"+c+"$2$3"+"$1"+r+"$2box$3")+e;case 100:return A(e,":",":"+r)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return A(e,"scroll-","scroll-snap-")+e}return e}function ue(e,r){var a="";for(var c=0;c<e.length;c++)a+=r(e[c],c,e,r)||"";return a}function oe(e,r,a,c){switch(e.type){case g:if(e.children.length)break;case o:case s:return e.return=e.return||e.value;case n:return "";case b:return e.return=e.value+"{"+ue(e.children,c)+"}";case t:if(!R(e.value=e.props.join(",")))return ""}return R(a=ue(e.children,c))?e.return=e.value+"{"+a+"}":""}function le(e){var r=P(e);return function(a,c,n,t){var s="";for(var i=0;i<r;i++)s+=e[i](a,c,n,t)||"";return s}}function fe(e){return function(r){if(!r.root)if(r=r.return)e(r);}}function pe(e,n,i,u){if(e.length>-1)if(!e.return)switch(e.type){case s:e.return=ie(e.value,e.length,i);return;case b:return ue([_(e,{value:A(e.value,"@","@"+c)})],u);case t:if(e.length)return N(i=e.props,(function(n){switch(T(n,u=/(::plac\w+|:read-\w+)/)){case ":read-only":case ":read-write":F(_(e,{props:[A(n,/:(read-\w+)/,":"+a+"$1")]}));F(_(e,{props:[n]}));E(e,{props:j(i,u)});break;case "::placeholder":F(_(e,{props:[A(n,/:(plac\w+)/,":"+c+"input-$1")]}));F(_(e,{props:[A(n,/:(plac\w+)/,":"+a+"$1")]}));F(_(e,{props:[A(n,/:(plac\w+)/,r+"input-$1")]}));F(_(e,{props:[n]}));E(e,{props:j(i,u)});break}return ""}))}}function he(e){switch(e.type){case t:e.props=e.props.map((function(r){return N(Z(r),(function(r,a,c){switch(M(r,0)){case 12:return S(r,1,R(r));case 0:case 40:case 43:case 62:case 126:return r;case 58:if(c[++a]==="global")c[a]="",c[++a]="\f"+S(c[a],a=1,-1);case 32:return a===1?"":r;default:switch(a){case 0:e=r;return P(c)>1?"":r;case a=P(c)-1:case 2:return a===2?r+e+e:r+e;default:return r}}}))}));}}e.CHARSET=l;e.COMMENT=n;e.COUNTER_STYLE=w;e.DECLARATION=s;e.DOCUMENT=h;e.FONT_FACE=d;e.FONT_FEATURE_VALUES=m;e.IMPORT=o;e.KEYFRAMES=b;e.LAYER=g;e.MEDIA=u;e.MOZ=a;e.MS=r;e.NAMESPACE=v;e.PAGE=i;e.RULESET=t;e.SCOPE=k;e.SUPPORTS=p;e.VIEWPORT=f;e.WEBKIT=c;e.abs=$;e.alloc=B;e.append=z;e.assign=E;e.caret=K;e.char=I;e.charat=M;e.combine=N;e.comment=te;e.commenter=ee;e.compile=ae;e.copy=_;e.dealloc=G;e.declaration=se;e.delimit=H;e.delimiter=X;e.escaping=Q;e.filter=j;e.from=x;e.hash=y;e.identifier=re;e.indexof=C;e.lift=F;e.match=T;e.middleware=le;e.namespace=he;e.next=D;e.node=U;e.parse=ce;e.peek=Y;e.prefix=ie;e.prefixer=pe;e.prev=L;e.replace=A;e.ruleset=ne;e.rulesheet=fe;e.serialize=ue;e.sizeof=P;e.slice=V;e.stringify=oe;e.strlen=R;e.substr=S;e.token=W;e.tokenize=Z;e.tokenizer=J;e.trim=O;e.whitespace=q;Object.defineProperty(e,"__esModule",{value:true});}));
		
	} (stylis, stylis.exports));

	var stylisExports = stylis.exports;

	var unitlessKeys = {
	  animationIterationCount: 1,
	  aspectRatio: 1,
	  borderImageOutset: 1,
	  borderImageSlice: 1,
	  borderImageWidth: 1,
	  boxFlex: 1,
	  boxFlexGroup: 1,
	  boxOrdinalGroup: 1,
	  columnCount: 1,
	  columns: 1,
	  flex: 1,
	  flexGrow: 1,
	  flexPositive: 1,
	  flexShrink: 1,
	  flexNegative: 1,
	  flexOrder: 1,
	  gridRow: 1,
	  gridRowEnd: 1,
	  gridRowSpan: 1,
	  gridRowStart: 1,
	  gridColumn: 1,
	  gridColumnEnd: 1,
	  gridColumnSpan: 1,
	  gridColumnStart: 1,
	  msGridRow: 1,
	  msGridRowSpan: 1,
	  msGridColumn: 1,
	  msGridColumnSpan: 1,
	  fontWeight: 1,
	  lineHeight: 1,
	  opacity: 1,
	  order: 1,
	  orphans: 1,
	  tabSize: 1,
	  widows: 1,
	  zIndex: 1,
	  zoom: 1,
	  WebkitLineClamp: 1,
	  // SVG-related properties
	  fillOpacity: 1,
	  floodOpacity: 1,
	  stopOpacity: 1,
	  strokeDasharray: 1,
	  strokeDashoffset: 1,
	  strokeMiterlimit: 1,
	  strokeOpacity: 1,
	  strokeWidth: 1
	};

	var emotionUnitless_esm = /*#__PURE__*/Object.freeze({
		__proto__: null,
		default: unitlessKeys
	});

	var require$$5 = /*@__PURE__*/getAugmentedNamespace(emotionUnitless_esm);

	var _default;
	Object.defineProperty(styledComponents_browser_cjs,"__esModule",{value:true});var e=require$$0,t=require$$1,n=React__default.default,r=shallowequal,o=stylisExports,s=require$$5;function i(e){return e&&e.__esModule?e:{default:e}}function a(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:true,get:function(){return e[n]}});}}),t.default=e,Object.freeze(t)}var c=/*#__PURE__*/i(t),u=/*#__PURE__*/i(n),l=/*#__PURE__*/i(r),p=/*#__PURE__*/a(o),d=/*#__PURE__*/i(s),h="undefined"!=typeof process&&void 0!==process.env&&(AdminJS.env.REACT_APP_SC_ATTR||AdminJS.env.SC_ATTR)||"data-styled",f="active",y="data-styled-version",m="6.1.18",v="/*!sc*/\n",g="undefined"!=typeof window&&"undefined"!=typeof document,S=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY&&AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==AdminJS.env.SC_DISABLE_SPEEDY&&""!==AdminJS.env.SC_DISABLE_SPEEDY?"false"!==AdminJS.env.SC_DISABLE_SPEEDY&&AdminJS.env.SC_DISABLE_SPEEDY:"production"!=="development"),w={},_=/invalid hook call/i,b=new Set,E=function(t,r){{var o=r?' with the id of "'.concat(r,'"'):"",s="The component ".concat(t).concat(o," has been created dynamically.\n")+"You may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.\nSee https://styled-components.com/docs/basics#define-styled-components-outside-of-the-render-method for more info.\n",i=console.error;try{var a=!0;console.error=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];_.test(t)?(a=!1,b.delete(s)):i.apply(void 0,e.__spreadArray([t],n,!1));},n.useRef(),a&&!b.has(s)&&(console.warn(s),b.add(s));}catch(e){_.test(e.message)&&b.delete(s);}finally{console.error=i;}}},N=Object.freeze([]),P=Object.freeze({});function C(e,t,n){return void 0===n&&(n=P),e.theme!==n.theme&&e.theme||t||n.theme}var A=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),I=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,O=/(^-|-$)/g;function x(e){return e.replace(I,"-").replace(O,"")}var D=/(a)(d)/gi,T=52,R=function(e){return String.fromCharCode(e+(e>25?39:97))};function j(e){var t,n="";for(t=Math.abs(e);t>T;t=t/T|0)n=R(t%T)+n;return (R(t%T)+n).replace(D,"$1-$2")}var k,V=5381,M=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},F=function(e){return M(V,e)};function z(e){return j(F(e)>>>0)}function $(e){return "string"==typeof e&&e||e.displayName||e.name||"Component"}function B(e){return "string"==typeof e&&(e.charAt(0)===e.charAt(0).toLowerCase())}var G="function"==typeof Symbol&&Symbol.for,L=G?Symbol.for("react.memo"):60115,q=G?Symbol.for("react.forward_ref"):60112,Y={childContextTypes:true,contextType:true,contextTypes:true,defaultProps:true,displayName:true,getDefaultProps:true,getDerivedStateFromError:true,getDerivedStateFromProps:true,mixins:true,propTypes:true,type:true},W={name:true,length:true,prototype:true,caller:true,callee:true,arguments:true,arity:true},H={$$typeof:true,compare:true,defaultProps:true,displayName:true,propTypes:true,type:true},U=((k={})[q]={$$typeof:true,render:true,defaultProps:true,displayName:true,propTypes:true},k[L]=H,k);function J(e){return ("type"in(t=e)&&t.type.$$typeof)===L?H:"$$typeof"in e?U[e.$$typeof]:Y;var t;}var X=Object.defineProperty,Z=Object.getOwnPropertyNames,K=Object.getOwnPropertySymbols,Q=Object.getOwnPropertyDescriptor,ee=Object.getPrototypeOf,te=Object.prototype;function ne(e,t,n){if("string"!=typeof t){if(te){var r=ee(t);r&&r!==te&&ne(e,r,n);}var o=Z(t);K&&(o=o.concat(K(t)));for(var s=J(e),i=J(t),a=0;a<o.length;++a){var c=o[a];if(!(c in W||n&&n[c]||i&&c in i||s&&c in s)){var u=Q(t,c);try{X(e,c,u);}catch(e){}}}}return e}function re(e){return "function"==typeof e}function oe(e){return "object"==typeof e&&"styledComponentId"in e}function se(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function ie(e,t){if(0===e.length)return "";for(var n=e[0],r=1;r<e.length;r++)n+=t?t+e[r]:e[r];return n}function ae(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function ce(e,t,n){if(void 0===n&&(n=false),!n&&!ae(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=ce(e[r],t[r]);else if(ae(t))for(var r in t)e[r]=ce(e[r],t[r]);return e}function ue(e,t){Object.defineProperty(e,"toString",{value:t});}var le={1:"Cannot create styled-component for component: %s.\n\n",2:"Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",3:"Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",4:"The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",5:"The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",6:"Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",7:'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',8:'ThemeProvider: Please make your "theme" prop an object.\n\n',9:"Missing document `<head>`\n\n",10:"Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",11:"_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",12:"It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",13:"%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",14:'ThemeProvider: "theme" prop is required.\n\n',15:"A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",16:"Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",17:"CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n",18:"ThemeProvider: Please make sure your useTheme hook is within a `<ThemeProvider>`"};function pe(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=e[0],r=[],o=1,s=e.length;o<s;o+=1)r.push(e[o]);return r.forEach(function(e){n=n.replace(/%[a-z]/,e);}),n}function de(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return new Error(pe.apply(void 0,e.__spreadArray([le[t]],n,false)).trim())}var he=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e;}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)if((o<<=1)<0)throw de(16,"".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var s=r;s<o;s++)this.groupSizes[s]=0;}for(var i=this.indexOfGroup(e+1),a=(s=0,t.length);s<a;s++)this.tag.insertRule(i,t[s])&&(this.groupSizes[e]++,i++);},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n);}},e.prototype.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,s=r;s<o;s++)t+="".concat(this.tag.getRule(s)).concat(v);return t},e}(),fe=1<<30,ye=new Map,me=new Map,ve=1,ge=function(e){if(ye.has(e))return ye.get(e);for(;me.has(ve);)ve++;var t=ve++;if(((0|t)<0||t>fe))throw de(16,"".concat(t));return ye.set(e,t),me.set(t,e),t},Se=function(e,t){ve=t+1,ye.set(e,t),me.set(t,e);},we="style[".concat(h,"][").concat(y,'="').concat(m,'"]'),_e=new RegExp("^".concat(h,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),be=function(e,t,n){for(var r,o=n.split(","),s=0,i=o.length;s<i;s++)(r=o[s])&&e.registerName(t,r);},Ee=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:"").split(v),o=[],s=0,i=r.length;s<i;s++){var a=r[s].trim();if(a){var c=a.match(_e);if(c){var u=0|parseInt(c[1],10),l=c[2];0!==u&&(Se(l,u),be(e,l,c[3]),e.getTag().insertRules(u,o)),o.length=0;}else o.push(a);}}},Ne=function(e){for(var t=document.querySelectorAll(we),n=0,r=t.length;n<r;n++){var o=t[n];o&&o.getAttribute(h)!==f&&(Ee(e,o),o.parentNode&&o.parentNode.removeChild(o));}};function Pe(){return "undefined"!=typeof __webpack_nonce__?__webpack_nonce__:null}var Ce=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){var t=Array.from(e.querySelectorAll("style[".concat(h,"]")));return t[t.length-1]}(n),s=void 0!==o?o.nextSibling:null;r.setAttribute(h,f),r.setAttribute(y,m);var i=Pe();return i&&r.setAttribute("nonce",i),n.insertBefore(r,s),r},Ae=function(){function e(e){this.element=Ce(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}throw de(17)}(this.element),this.length=0;}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return  false}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--;},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},e}(),Ie=function(){function e(e){this.element=Ce(e),this.nodes=this.element.childNodes,this.length=0;}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,true}return  false},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--;},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Oe=function(){function e(e){this.rules=[],this.length=0;}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,true)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--;},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),xe=g,De={isServer:!g,useCSSOMInjection:!S},Te=function(){function t(t,n,r){ void 0===t&&(t=P),void 0===n&&(n={});var o=this;this.options=e.__assign(e.__assign({},De),t),this.gs=n,this.names=new Map(r),this.server=!!t.isServer,!this.server&&g&&xe&&(xe=false,Ne(this)),ue(this,function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=function(n){var o=function(e){return me.get(e)}(n);if(void 0===o)return "continue";var s=e.names.get(o),i=t.getGroup(n);if(void 0===s||!s.size||0===i.length)return "continue";var a="".concat(h,".g").concat(n,'[id="').concat(o,'"]'),c="";void 0!==s&&s.forEach(function(e){e.length>0&&(c+="".concat(e,","));}),r+="".concat(i).concat(a,'{content:"').concat(c,'"}').concat(v);},s=0;s<n;s++)o(s);return r}(o)});}return t.registerId=function(e){return ge(e)},t.prototype.rehydrate=function(){!this.server&&g&&Ne(this);},t.prototype.reconstructWithOptions=function(n,r){return void 0===r&&(r=true),new t(e.__assign(e.__assign({},this.options),n),this.gs,r&&this.names||void 0)},t.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var t=e.useCSSOMInjection,n=e.target;return e.isServer?new Oe(n):t?new Ae(n):new Ie(n)}(this.options),new he(e)));var e;},t.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.prototype.registerName=function(e,t){if(ge(e),this.names.has(e))this.names.get(e).add(t);else {var n=new Set;n.add(t),this.names.set(e,n);}},t.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(ge(e),n);},t.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear();},t.prototype.clearRules=function(e){this.getTag().clearGroup(ge(e)),this.clearNames(e);},t.prototype.clearTag=function(){this.tag=void 0;},t}(),Re=/&/g,je=/^\s*\/\/.*$/gm;function ke(e,t){return e.map(function(e){return "rule"===e.type&&(e.value="".concat(t," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(t," ")),e.props=e.props.map(function(e){return "".concat(t," ").concat(e)})),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=ke(e.children,t)),e})}function Ve(e){var t,n,r,o=void 0===e?P:e,s=o.options,i=void 0===s?P:s,a=o.plugins,c=void 0===a?N:a,u=function(e,r,o){return o.startsWith(n)&&o.endsWith(n)&&o.replaceAll(n,"").length>0?".".concat(t):e},l=c.slice();l.push(function(e){e.type===p.RULESET&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(Re,n).replace(r,u));}),i.prefix&&l.push(p.prefixer),l.push(p.stringify);var d=function(e,o,s,a){ void 0===o&&(o=""),void 0===s&&(s=""),void 0===a&&(a="&"),t=a,n=o,r=new RegExp("\\".concat(n,"\\b"),"g");var c=e.replace(je,""),u=p.compile(s||o?"".concat(s," ").concat(o," { ").concat(c," }"):c);i.namespace&&(u=ke(u,i.namespace));var d=[];return p.serialize(u,p.middleware(l.concat(p.rulesheet(function(e){return d.push(e)})))),d};return d.hash=c.length?c.reduce(function(e,t){return t.name||de(15),M(e,t.name)},V).toString():"",d}var Me=new Te,Fe=Ve(),ze=u.default.createContext({shouldForwardProp:void 0,styleSheet:Me,stylis:Fe}),$e=ze.Consumer,Be=u.default.createContext(void 0);function Ge(){return n.useContext(ze)}function Le(e){var t=n.useState(e.stylisPlugins),r=t[0],o=t[1],s=Ge().styleSheet,i=n.useMemo(function(){var t=s;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},false)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:false})),t},[e.disableCSSOMInjection,e.sheet,e.target,s]),a=n.useMemo(function(){return Ve({options:{namespace:e.namespace,prefix:e.enableVendorPrefixes},plugins:r})},[e.enableVendorPrefixes,e.namespace,r]);n.useEffect(function(){l.default(r,e.stylisPlugins)||o(e.stylisPlugins);},[e.stylisPlugins]);var c=n.useMemo(function(){return {shouldForwardProp:e.shouldForwardProp,styleSheet:i,stylis:a}},[e.shouldForwardProp,i,a]);return u.default.createElement(ze.Provider,{value:c},u.default.createElement(Be.Provider,{value:a},e.children))}var qe=function(){function e(e,t){var n=this;this.inject=function(e,t){ void 0===t&&(t=Fe);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"));},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,ue(this,function(){throw de(12,String(n.name))});}return e.prototype.getName=function(e){return void 0===e&&(e=Fe),this.name+e.hash},e}(),Ye=function(e){return e>="A"&&e<="Z"};function We(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(1===n&&"-"===r&&"-"===e[0])return e;Ye(r)?t+="-"+r.toLowerCase():t+=r;}return t.startsWith("ms-")?"-"+t:t}var He=function(e){return null==e||false===e||""===e},Ue=function(t){var n,r,o=[];for(var s in t){var i=t[s];t.hasOwnProperty(s)&&!He(i)&&(Array.isArray(i)&&i.isCss||re(i)?o.push("".concat(We(s),":"),i,";"):ae(i)?o.push.apply(o,e.__spreadArray(e.__spreadArray(["".concat(s," {")],Ue(i),false),["}"],false)):o.push("".concat(We(s),": ").concat((n=s,null==(r=i)||"boolean"==typeof r||""===r?"":"number"!=typeof r||0===r||n in d.default||n.startsWith("--")?String(r).trim():"".concat(r,"px")),";")));}return o};function Je(e,t,n,r){if(He(e))return [];if(oe(e))return [".".concat(e.styledComponentId)];if(re(e)){if(!re(s=e)||s.prototype&&s.prototype.isReactComponent||!t)return [e];var o=e(t);return "object"!=typeof o||Array.isArray(o)||o instanceof qe||ae(o)||null===o||console.error("".concat($(e)," is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.")),Je(o,t,n,r)}var s;return e instanceof qe?n?(e.inject(n,r),[e.getName(r)]):[e]:ae(e)?Ue(e):Array.isArray(e)?Array.prototype.concat.apply(N,e.map(function(e){return Je(e,t,n,r)})):[e.toString()]}function Xe(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(re(n)&&!oe(n))return  false}return  true}var Ze=F(m),Ke=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic="production"==="development",this.componentId=t,this.baseHash=M(Ze,t),this.baseStyle=n,Te.registerId(t);}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):"";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=se(r,this.staticRulesId);else {var o=ie(Je(this.rules,e,t,n)),s=j(M(this.baseHash,o)>>>0);if(!t.hasNameForId(this.componentId,s)){var i=n(o,".".concat(s),void 0,this.componentId);t.insertRules(this.componentId,s,i);}r=se(r,s),this.staticRulesId=s;}else {for(var a=M(this.baseHash,n.hash),c="",u=0;u<this.rules.length;u++){var l=this.rules[u];if("string"==typeof l)c+=l,(a=M(a,l));else if(l){var p=ie(Je(l,e,t,n));a=M(a,p+u),c+=p;}}if(c){var d=j(a>>>0);t.hasNameForId(this.componentId,d)||t.insertRules(this.componentId,d,n(c,".".concat(d),void 0,this.componentId)),r=se(r,d);}}return r},e}(),Qe=u.default.createContext(void 0),et=Qe.Consumer,tt={},nt=new Set;function rt(t,r,o){var s=oe(t),i=t,a=!B(t),l=r.attrs,p=void 0===l?N:l,d=r.componentId,h=void 0===d?function(e,t){var n="string"!=typeof e?"sc":x(e);tt[n]=(tt[n]||0)+1;var r="".concat(n,"-").concat(z(m+n+tt[n]));return t?"".concat(t,"-").concat(r):r}(r.displayName,r.parentComponentId):d,f=r.displayName,y=void 0===f?function(e){return B(e)?"styled.".concat(e):"Styled(".concat($(e),")")}(t):f,v=r.displayName&&r.componentId?"".concat(x(r.displayName),"-").concat(r.componentId):r.componentId||h,g=s&&i.attrs?i.attrs.concat(p).filter(Boolean):p,S=r.shouldForwardProp;if(s&&i.shouldForwardProp){var w=i.shouldForwardProp;if(r.shouldForwardProp){var _=r.shouldForwardProp;S=function(e,t){return w(e,t)&&_(e,t)};}else S=w;}var b=new Ke(o,v,s?i.componentStyle:void 0);function I(t,r){return function(t,r,o){var s=t.attrs,i=t.componentStyle,a=t.defaultProps,l=t.foldedComponentIds,p=t.styledComponentId,d=t.target,h=u.default.useContext(Qe),f=Ge(),y=t.shouldForwardProp||f.shouldForwardProp;n.useDebugValue(p);var m=C(r,h,a)||P,v=function(t,n,r){for(var o,s=e.__assign(e.__assign({},n),{className:void 0,theme:r}),i=0;i<t.length;i+=1){var a=re(o=t[i])?o(s):o;for(var c in a)s[c]="className"===c?se(s[c],a[c]):"style"===c?e.__assign(e.__assign({},s[c]),a[c]):a[c];}return n.className&&(s.className=se(s.className,n.className)),s}(s,r,m),g=v.as||d,S={};for(var w in v) void 0===v[w]||"$"===w[0]||"as"===w||"theme"===w&&v.theme===m||("forwardedAs"===w?S.as=v.forwardedAs:y&&!y(w,g)||(S[w]=v[w],y||"development"!=="development"||c.default(w)||nt.has(w)||!A.has(g)||(nt.add(w),console.warn('styled-components: it looks like an unknown prop "'.concat(w,'" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via `<StyleSheetManager shouldForwardProp={...}>` (connect an API like `@emotion/is-prop-valid`) or consider using transient props (`$` prefix for automatic filtering.)')))));var _=function(e,t){var r=Ge(),o=e.generateAndInjectStyles(t,r.styleSheet,r.stylis);return n.useDebugValue(o),o}(i,v);t.warnTooManyClasses&&t.warnTooManyClasses(_);var b=se(l,p);return _&&(b+=" "+_),v.className&&(b+=" "+v.className),S[B(g)&&!A.has(g)?"class":"className"]=b,o&&(S.ref=o),n.createElement(g,S)}(O,t,r)}I.displayName=y;var O=u.default.forwardRef(I);return O.attrs=g,O.componentStyle=b,O.displayName=y,O.shouldForwardProp=S,O.foldedComponentIds=s?se(i.foldedComponentIds,i.styledComponentId):"",O.styledComponentId=v,O.target=s?i.target:t,Object.defineProperty(O,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=s?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,o=t;r<o.length;r++)ce(e,o[r],true);return e}({},i.defaultProps,e):e;}}),(E(y,v),O.warnTooManyClasses=function(e,t){var n={},r=false;return function(o){if(!r&&(n[o]=true,Object.keys(n).length>=200)){var s=t?' with the id of "'.concat(t,'"'):"";console.warn("Over ".concat(200," classes were generated for component ").concat(e).concat(s,".\n")+"Consider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"),r=true,n={};}}}(y,v)),ue(O,function(){return ".".concat(O.styledComponentId)}),a&&ne(O,t,{attrs:true,componentStyle:true,displayName:true,foldedComponentIds:true,shouldForwardProp:true,styledComponentId:true,target:true}),O}function ot(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n}var st=function(e){return Object.assign(e,{isCss:true})};function it(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];if(re(t)||ae(t))return st(Je(ot(N,e.__spreadArray([t],n,true))));var o=t;return 0===n.length&&1===o.length&&"string"==typeof o[0]?Je(o):st(Je(ot(o,n)))}function at(t,n,r){if(void 0===r&&(r=P),!n)throw de(1,n);var o=function(o){for(var s=[],i=1;i<arguments.length;i++)s[i-1]=arguments[i];return t(n,r,it.apply(void 0,e.__spreadArray([o],s,false)))};return o.attrs=function(o){return at(t,n,e.__assign(e.__assign({},r),{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o.withConfig=function(o){return at(t,n,e.__assign(e.__assign({},r),o))},o}var ct=function(e){return at(rt,e)},ut=ct;A.forEach(function(e){ut[e]=ct(e);});var lt=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Xe(e),Te.registerId(this.componentId+1);}return e.prototype.createStyles=function(e,t,n,r){var o=r(ie(Je(this.rules,t,n,r)),""),s=this.componentId+e;n.insertRules(s,s,o);},e.prototype.removeStyles=function(e,t){t.clearRules(this.componentId+e);},e.prototype.renderStyles=function(e,t,n,r){e>2&&Te.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r);},e}(),pt=function(){function t(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString();if(!e)return "";var n=Pe(),r=ie([n&&'nonce="'.concat(n,'"'),"".concat(h,'="true"'),"".concat(y,'="').concat(m,'"')].filter(Boolean)," ");return "<style ".concat(r,">").concat(e,"</style>")},this.getStyleTags=function(){if(t.sealed)throw de(2);return t._emitSheetCSS()},this.getStyleElement=function(){var n;if(t.sealed)throw de(2);var r=t.instance.toString();if(!r)return [];var o=((n={})[h]="",n[y]=m,n.dangerouslySetInnerHTML={__html:r},n),s=Pe();return s&&(o.nonce=s),[u.default.createElement("style",e.__assign({},o,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=true;},this.instance=new Te({isServer:true}),this.sealed=false;}return t.prototype.collectStyles=function(e){if(this.sealed)throw de(2);return u.default.createElement(Le,{sheet:this.instance},e)},t.prototype.interleaveWithNodeStream=function(e){throw de(3)},t}(),dt={StyleSheet:Te,mainSheet:Me};"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");var ht="__sc-".concat(h,"__");"undefined"!=typeof window&&(window[ht]||(window[ht]=0),1===window[ht]&&console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."),window[ht]+=1),styledComponents_browser_cjs.ServerStyleSheet=pt,styledComponents_browser_cjs.StyleSheetConsumer=$e,styledComponents_browser_cjs.StyleSheetContext=ze,styledComponents_browser_cjs.StyleSheetManager=Le,styledComponents_browser_cjs.ThemeConsumer=et,styledComponents_browser_cjs.ThemeContext=Qe,styledComponents_browser_cjs.ThemeProvider=function(t){var r=u.default.useContext(Qe),o=n.useMemo(function(){return function(t,n){if(!t)throw de(14);if(re(t)){var r=t(n);if((null===r||Array.isArray(r)||"object"!=typeof r))throw de(7);return r}if(Array.isArray(t)||"object"!=typeof t)throw de(8);return n?e.__assign(e.__assign({},n),t):t}(t.theme,r)},[t.theme,r]);return t.children?u.default.createElement(Qe.Provider,{value:o},t.children):null},styledComponents_browser_cjs.__PRIVATE__=dt,styledComponents_browser_cjs.createGlobalStyle=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=it.apply(void 0,e.__spreadArray([t],n,false)),s="sc-global-".concat(z(JSON.stringify(o))),i=new lt(o,s);E(s);var a=function(e){var t=Ge(),n=u.default.useContext(Qe),r=u.default.useRef(t.styleSheet.allocateGSInstance(s)).current;return u.default.Children.count(e.children)&&console.warn("The global style component ".concat(s," was given child JSX. createGlobalStyle does not render children.")),o.some(function(e){return "string"==typeof e&&-1!==e.indexOf("@import")})&&console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."),t.styleSheet.server&&c(r,e,t.styleSheet,n,t.stylis),u.default.useLayoutEffect(function(){if(!t.styleSheet.server)return c(r,e,t.styleSheet,n,t.stylis),function(){return i.removeStyles(r,t.styleSheet)}},[r,e,t.styleSheet,n,t.stylis]),null};function c(t,n,r,o,s){if(i.isStatic)i.renderStyles(t,w,r,s);else {var c=e.__assign(e.__assign({},n),{theme:C(n,o,a.defaultProps)});i.renderStyles(t,c,r,s);}}return u.default.memo(a)},styledComponents_browser_cjs.css=it,_default = styledComponents_browser_cjs.default=ut,styledComponents_browser_cjs.isStyledComponent=oe,styledComponents_browser_cjs.keyframes=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");var o=ie(it.apply(void 0,e.__spreadArray([t],n,false))),s=z(o);return new qe(s,o)},styledComponents_browser_cjs.styled=ut,styledComponents_browser_cjs.useTheme=function(){var e=n.useContext(Qe);if(!e)throw de(18);return e},styledComponents_browser_cjs.version=m,styledComponents_browser_cjs.withTheme=function(t){var n=u.default.forwardRef(function(n,r){var o=C(n,u.default.useContext(Qe),t.defaultProps);return void 0===o&&console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "'.concat($(t),'"')),u.default.createElement(t,e.__assign({},n,{theme:o,ref:r}))});return n.displayName="WithTheme(".concat($(t),")"),ne(n,t)};

	const publicUrl$2 = window?.AdminJS?.env?.PUBLIC_URL || '';
	const UploadContainer$2 = _default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-height: 300px;
  gap: 10px;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 10px;
  margin: 20px auto;

  @media (max-width: 768px) {
    padding: 15px;
    gap: 8px;
    max-height: 250px;
  }

  @media (max-width: 480px) {
    padding: 10px;
    gap: 5px;
    max-height: 200px;
  }
`;
	const UploadedImage$2 = _default.img`
  max-width: 100%;
  max-height: 200px;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  @media (max-width: 768px) {
    max-height: 150px;
  }

  @media (max-width: 480px) {
    max-height: 100px;
  }
`;
	const FileInput$2 = _default.input`
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    border-color: #038405;
  }

  @media (max-width: 768px) {
    padding: 8px;
    width: 80%;
  }

  @media (max-width: 480px) {
    padding: 5px;
    width: 80%;
  }
`;
	const UserPhotoUpload = props => {
	  const {
	    record,
	    onChange
	  } = props;
	  const [userPhoto, setUserPhoto] = React.useState(record?.params?.userPhoto || '');
	  const [isUploading, setIsUploading] = React.useState(false);
	  const [error, setError] = React.useState('');
	  const handleUpload = event => {
	    const file = event.target.files[0];
	    if (!file) {
	      setError('No file selected');
	      return;
	    }
	    setIsUploading(true);
	    setError('');
	    const formData = new FormData();
	    formData.append('photo', file);
	    formData.append('isUserPhoto', 'true');
	    console.log('Uploading to:', `${publicUrl$2}/api/reviews/${record.id}/user-photo`);
	    console.log('Record ID:', record.id);
	    console.log('File:', file.name);
	    fetch(`${publicUrl$2}/api/reviews/${record.id}/user-photo`, {
	      method: 'POST',
	      body: formData
	    }).then(response => {
	      console.log('Response status:', response.status);
	      if (!response.ok) {
	        throw new Error(`HTTP error! status: ${response.status}`);
	      }
	      return response.json();
	    }).then(data => {
	      console.log('User photo uploaded:', data);
	      setUserPhoto(data.userPhoto);
	      setIsUploading(false);
	      if (onChange) {
	        onChange('userPhoto', data.userPhoto);
	      }
	    }).catch(error => {
	      console.error('Error uploading user photo:', error);
	      setError(error.message);
	      setIsUploading(false);
	    });
	  };
	  return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement("h6", null, "Upload User Photo"), /*#__PURE__*/React__default.default.createElement(UploadContainer$2, null, userPhoto && /*#__PURE__*/React__default.default.createElement(UploadedImage$2, {
	    src: `${publicUrl$2}${userPhoto}`,
	    alt: "User Photo"
	  }), error && /*#__PURE__*/React__default.default.createElement("div", {
	    style: {
	      color: 'red',
	      fontSize: '12px'
	    }
	  }, error), isUploading && /*#__PURE__*/React__default.default.createElement("div", {
	    style: {
	      color: 'blue',
	      fontSize: '12px'
	    }
	  }, "Uploading..."), /*#__PURE__*/React__default.default.createElement(FileInput$2, {
	    type: "file",
	    accept: "image/*",
	    onChange: handleUpload,
	    disabled: isUploading
	  })));
	};

	const publicUrl$1 = window?.AdminJS?.env?.PUBLIC_URL || '';
	const UploadContainer$1 = _default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-height: 400px;
  gap: 15px;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 10px;
  margin: 20px auto;

  @media (max-width: 768px) {
    padding: 15px;
    gap: 10px;
    max-height: 300px;
  }

  @media (max-width: 480px) {
    padding: 10px;
    gap: 8px;
    max-height: 250px;
  }
`;
	const PhotoList$1 = _default.div`
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
`;
	const PhotoItem$1 = _default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
`;
	const UploadedImage$1 = _default.img`
  max-width: 100px;
  max-height: 100px;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  @media (max-width: 768px) {
    max-width: 80px;
    max-height: 80px;
  }

  @media (max-width: 480px) {
    max-width: 60px;
    max-height: 60px;
  }
`;
	const DeleteButton$1 = _default.button`
  padding: 5px 10px;
  background-color: #ff4d4d;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 12px;

  &:hover {
    background-color: #e60000;
  }
`;
	const FileInput$1 = _default.input`
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    border-color: #038405;
  }

  @media (max-width: 768px) {
    padding: 8px;
    width: 80%;
  }

  @media (max-width: 480px) {
    padding: 5px;
    width: 80%;
  }
`;
	const LotPhotoUpload = props => {
	  const {
	    record
	  } = props;
	  const [photos, setPhotos] = React.useState([]);
	  React.useEffect(() => {
	    if (record?.id) {
	      fetch(`${publicUrl$1}/api/lots/${record.id}/photos`).then(response => response.json()).then(data => setPhotos(data)).catch(error => console.error('Error fetching lot photos:', error));
	    }
	  }, [record?.id]);
	  const handleAddPhotos = event => {
	    const files = Array.from(event.target.files);
	    const formData = new FormData();
	    files.forEach(file => {
	      formData.append('photos', file);
	    });
	    fetch(`${publicUrl$1}/api/lots/${record.id}/photos`, {
	      method: 'POST',
	      body: formData
	    }).then(response => response.json()).then(data => {
	      setPhotos(prev => [...prev, ...data.photos]);
	    }).catch(error => console.error('Error uploading photos:', error));
	  };
	  const handleDeletePhoto = photoId => {
	    fetch(`${publicUrl$1}/api/lots/${record.id}/photos/${photoId}`, {
	      method: 'DELETE'
	    }).then(() => {
	      setPhotos(prev => prev.filter(photo => photo.id !== photoId));
	    }).catch(error => console.error('Error deleting photo:', error));
	  };
	  return /*#__PURE__*/React__default.default.createElement(UploadContainer$1, null, /*#__PURE__*/React__default.default.createElement("h4", null, "Lot Photos"), /*#__PURE__*/React__default.default.createElement(PhotoList$1, null, photos.map(photo => /*#__PURE__*/React__default.default.createElement(PhotoItem$1, {
	    key: photo.id
	  }, /*#__PURE__*/React__default.default.createElement(UploadedImage$1, {
	    src: `${publicUrl$1}${photo.photoUrl}`,
	    alt: "Lot Photo"
	  }), /*#__PURE__*/React__default.default.createElement(DeleteButton$1, {
	    onClick: () => handleDeletePhoto(photo.id)
	  }, "Delete")))), /*#__PURE__*/React__default.default.createElement(FileInput$1, {
	    type: "file",
	    multiple: true,
	    accept: "image/*",
	    onChange: handleAddPhotos
	  }));
	};

	const publicUrl = window?.AdminJS?.env?.PUBLIC_URL || '';
	const UploadContainer = _default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-height: 400px;
  gap: 15px;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 10px;
  margin: 20px auto;

  @media (max-width: 768px) {
    padding: 15px;
    gap: 10px;
    max-height: 300px;
  }

  @media (max-width: 480px) {
    padding: 10px;
    gap: 8px;
    max-height: 250px;
  }
`;
	const PhotoList = _default.div`
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
`;
	const PhotoItem = _default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
`;
	const UploadedImage = _default.img`
  max-width: 100px;
  max-height: 100px;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  @media (max-width: 768px) {
    max-width: 80px;
    max-height: 80px;
  }

  @media (max-width: 480px) {
    max-width: 60px;
    max-height: 60px;
  }
`;
	const DeleteButton = _default.button`
  padding: 5px 10px;
  background-color: #ff4d4d;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 12px;

  &:hover {
    background-color: #e60000;
  }
`;
	const FileInput = _default.input`
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    border-color: #038405;
  }

  @media (max-width: 768px) {
    padding: 8px;
    width: 80%;
  }

  @media (max-width: 480px) {
    padding: 5px;
    width: 80%;
  }
`;
	const ReviewPhotoUpload = props => {
	  const {
	    record
	  } = props;
	  const [photos, setPhotos] = React.useState([]);
	  React.useEffect(() => {
	    if (record?.id) {
	      fetch(`${publicUrl}/api/reviews/${record.id}/review-photos`).then(response => response.json()).then(data => setPhotos(data)).catch(error => console.error('Error fetching review photos:', error));
	    }
	  }, [record?.id]);
	  const handleAddPhotos = event => {
	    const files = Array.from(event.target.files);
	    const formData = new FormData();
	    files.forEach(file => {
	      formData.append('photos', file);
	    });
	    fetch(`${publicUrl}/api/reviews/${record.id}/review-photos`, {
	      method: 'POST',
	      body: formData
	    }).then(response => {
	      if (!response.ok) {
	        throw new Error(`HTTP error! status: ${response.status}`);
	      }
	      return response.json();
	    }).then(data => {
	      if (!data || !Array.isArray(data.photos)) {
	        console.error('Invalid response format:', data);
	        throw new Error('Invalid response format from server');
	      }
	      setPhotos(prev => [...prev, ...data.photos]);
	    }).catch(error => {
	      console.error('Error uploading photos:', error);
	    });
	  };
	  const handleDeletePhoto = photoId => {
	    fetch(`${publicUrl}/api/reviews/${record.id}/review-photos/${photoId}`, {
	      method: 'DELETE'
	    }).then(() => {
	      setPhotos(prev => prev.filter(photo => photo.id !== photoId));
	    }).catch(error => console.error('Error deleting photo:', error));
	  };
	  return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement("h4", null, "Review Photos"), /*#__PURE__*/React__default.default.createElement(UploadContainer, null, /*#__PURE__*/React__default.default.createElement(PhotoList, null, photos.map(photo => /*#__PURE__*/React__default.default.createElement(PhotoItem, {
	    key: photo.id
	  }, /*#__PURE__*/React__default.default.createElement(UploadedImage, {
	    src: `${publicUrl}${photo.photoUrl}`,
	    alt: "Review Photo"
	  }), /*#__PURE__*/React__default.default.createElement(DeleteButton, {
	    onClick: () => handleDeletePhoto(photo.id)
	  }, "Delete")))), /*#__PURE__*/React__default.default.createElement(FileInput, {
	    type: "file",
	    multiple: true,
	    accept: "image/*",
	    onChange: handleAddPhotos
	  })));
	};

	const fields = [{
	  name: 'name',
	  label: 'Назва конфігурації калькулятора',
	  type: 'string'
	}, {
	  name: 'mode',
	  label: 'Режим розрахунку',
	  type: 'select',
	  options: [{
	    value: 'full',
	    label: 'Повний'
	  }, {
	    value: 'delivery',
	    label: 'Тільки доставка'
	  }]
	}, {
	  name: 'copartCleanType',
	  label: 'Тип чистого аукціону Copart',
	  type: 'select',
	  options: [{
	    value: 'clean',
	    label: 'Clean'
	  }, {
	    value: 'non_clean',
	    label: 'Non-Clean'
	  }]
	}, {
	  name: 'copartSecuredType',
	  label: 'Тип захищеного аукціону Copart',
	  type: 'select',
	  options: [{
	    value: 'secured',
	    label: 'Secured'
	  }, {
	    value: 'unsecured',
	    label: 'Unsecured'
	  }]
	}, {
	  name: 'iaaiLicenseType',
	  label: 'Тип ліцензії IAAI',
	  type: 'select',
	  options: [{
	    value: 'standart_licensed',
	    label: 'Standart Licensed'
	  }, {
	    value: 'standart_nonlicensed',
	    label: 'Standart Non-Licensed'
	  }]
	}, {
	  name: 'iaaiVolumeType',
	  label: 'Тип об\'єму IAAI',
	  type: 'select',
	  options: [{
	    value: 'standart_volume',
	    label: 'Standart Volume'
	  }, {
	    value: 'high_volume',
	    label: 'High Volume'
	  }]
	}, {
	  name: 'addCopartFees',
	  label: 'Додаткові фіксовані збори для Copart',
	  type: 'number'
	}, {
	  name: 'addIaaiFees',
	  label: 'Додаткові фіксовані збори для IAAI',
	  type: 'number'
	}, {
	  name: 'inlandMarkupType',
	  label: 'Тип націнки на доставку всередині США',
	  type: 'select',
	  options: [{
	    value: 'fixed',
	    label: 'Фіксована'
	  }, {
	    value: 'percent',
	    label: 'Відсоткова'
	  }]
	}, {
	  name: 'inlandMarkupValue',
	  label: 'Значення націнки на внутрішню доставку',
	  type: 'number'
	}, {
	  name: 'serviceFee',
	  label: 'Плата за послуги компанії',
	  type: 'number'
	}, {
	  name: 'buttonFee',
	  label: 'Плата за "кнопку"',
	  type: 'number'
	}, {
	  name: 'addOneYear',
	  label: 'Додавати +1 рік до віку авто',
	  type: 'boolean'
	}, {
	  name: 'insurancePercent',
	  label: 'Відсоток страховки',
	  type: 'number'
	}, {
	  name: 'certificationFee',
	  label: 'Вартість сертифікації авто',
	  type: 'number'
	}, {
	  name: 'expeditionFee',
	  label: 'Вартість експедиції',
	  type: 'number'
	}, {
	  name: 'brokerFee',
	  label: 'Плата брокеру за послуги',
	  type: 'number'
	}, {
	  name: 'electricPortExtra',
	  label: 'Додаткова плата для електрокарів у порту',
	  type: 'number'
	}, {
	  name: 'extraFees',
	  label: 'Інші додаткові збори',
	  type: 'number'
	}, {
	  name: 'deliveryFromPortCar',
	  label: 'Вартість доставки з порту (авто)',
	  type: 'number'
	}, {
	  name: 'deliveryFromPortMoto',
	  label: 'Вартість доставки з порту (мото)',
	  type: 'number'
	}, {
	  name: 'deliveryFromPortElectric',
	  label: 'Додаткова вартість доставки з порту (електро)',
	  type: 'number'
	}, {
	  name: 'countSwiftFee',
	  label: 'Враховувати комісію SWIFT',
	  type: 'boolean'
	}, {
	  name: 'swiftFixed',
	  label: 'Фіксована частина комісії SWIFT',
	  type: 'number'
	}, {
	  name: 'swiftPercent',
	  label: 'Відсоткова частина комісії SWIFT',
	  type: 'number'
	}, {
	  name: 'extraFreightElectric',
	  label: 'Додатковий фрахт для електрокарів',
	  type: 'number'
	}, {
	  name: 'customsOutput',
	  label: 'Формат виводу митного розрахунку',
	  type: 'select',
	  options: [{
	    value: 'short',
	    label: 'Короткий'
	  }, {
	    value: 'detailed',
	    label: 'Детальний'
	  }]
	}];
	new adminjs.ApiClient();
	const CalculatorDashboard = () => {
	  const [calculator, setCalculator] = React.useState(null);
	  const [initialCalculator, setInitialCalculator] = React.useState(null);
	  const [errors, setErrors] = React.useState({});
	  const sendNotice = adminjs.useNotice();
	  React.useEffect(() => {
	    fetch('/api/calculator').then(res => res.json()).then(data => {
	      setCalculator(data);
	      setInitialCalculator(data);
	    });
	  }, []);
	  const validate = data => {
	    const errs = {};
	    fields.forEach(f => {
	      if (f.type === 'number' && data[f.name] !== null && data[f.name] !== undefined && data[f.name] !== '') {
	        if (isNaN(Number(data[f.name]))) errs[f.name] = 'Має бути числом';
	      }
	      if (f.type === 'select' && f.options && !f.options.find(opt => opt.value === data[f.name])) {
	        errs[f.name] = 'Оберіть значення зі списку';
	      }
	      if (f.type === 'boolean' && typeof data[f.name] !== 'boolean') {
	        errs[f.name] = 'Оберіть Так/Ні';
	      }
	    });
	    return errs;
	  };
	  const handleChange = (name, value, type) => {
	    let val = value;
	    if (type === 'number') val = value === '' ? '' : Number(value);
	    if (type === 'boolean') val = value;
	    setCalculator({
	      ...calculator,
	      [name]: val
	    });
	  };
	  const handleSave = async e => {
	    e.preventDefault();
	    const errs = validate(calculator);
	    setErrors(errs);
	    if (Object.keys(errs).length > 0) return;
	    await fetch('/api/calculator', {
	      method: 'PUT',
	      headers: {
	        'Content-Type': 'application/json'
	      },
	      body: JSON.stringify(calculator, null, 2)
	    });
	    setInitialCalculator(calculator);
	    sendNotice({
	      message: 'Дані збережено',
	      type: 'success'
	    });
	  };
	  const handleReset = () => {
	    setCalculator(initialCalculator);
	    setErrors({});
	    sendNotice({
	      message: 'Скинуто зміни',
	      type: 'info'
	    });
	  };
	  if (!calculator) return /*#__PURE__*/React__default.default.createElement(designSystem.Box, null, 'Завантаження...');
	  return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      flexDirection: 'column',
	      height: '100vh',
	      position: 'relative',
	      paddingRight: 0
	    }
	  }, /*#__PURE__*/React__default.default.createElement('form', {
	    onSubmit: handleSave,
	    style: {
	      flex: 1,
	      overflowY: 'auto',
	      paddingRight: 16,
	      marginBottom: 0,
	      display: 'flex',
	      flexDirection: 'column',
	      gap: 16
	    }
	  }, ...fields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    key: f.name
	  }, /*#__PURE__*/React__default.default.createElement(designSystem.Label, null, f.label), f.type === 'select' ? /*#__PURE__*/React__default.default.createElement(designSystem.Select, {
	    value: f.options.find(opt => opt.value === calculator[f.name]) || null,
	    options: f.options,
	    onChange: selected => handleChange(f.name, selected?.value, f.type)
	  }) : f.type === 'boolean' ? /*#__PURE__*/React__default.default.createElement(designSystem.CheckBox, {
	    checked: !!calculator[f.name],
	    onChange: e => handleChange(f.name, e.target.checked, f.type),
	    label: calculator[f.name] ? 'Так' : 'Ні'
	  }) : f.type === 'string' ? /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
	    type: 'text',
	    value: calculator[f.name] ?? '',
	    onChange: e => handleChange(f.name, e.target.value, f.type)
	  }) : /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
	    type: 'number',
	    value: calculator[f.name] ?? '',
	    onChange: e => handleChange(f.name, e.target.value, f.type),
	    disabled: f.allowNull && calculator[f.name] === null
	  }), errors[f.name] && /*#__PURE__*/React__default.default.createElement(designSystem.MessageBox, {
	    variant: 'danger',
	    mt: 'xs'
	  }, errors[f.name])))), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      gap: 16,
	      justifyContent: 'flex-end',
	      padding: 16,
	      borderTop: '1px solid #eee',
	      background: '#fff',
	      position: 'sticky',
	      bottom: 0,
	      zIndex: 10
	    }
	  }, /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
	    variant: 'danger',
	    type: 'button',
	    onClick: handleReset
	  }, 'Скинути'), /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
	    variant: 'primary',
	    type: 'submit',
	    onClick: handleSave
	  }, 'Зберегти')));
	};

	const feeIcons = {
	  carFee: '/dashboardIcons/car.png',
	  crossoverFee: '/dashboardIcons/crossover.png',
	  suvFee: '/dashboardIcons/suv.png',
	  motoFee: '/dashboardIcons/moto.png',
	  hybridFee: '/dashboardIcons/danger.png'
	};
	const feeTips = {
	  carFee: 'Легковой автомобиль',
	  crossoverFee: 'Кроссовер (паркетник)',
	  suvFee: 'Внедорожник',
	  motoFee: 'Мото',
	  hybridFee: `Значение данного поля автоматически добавляется к фрахту  при перевозке гибридных и электрических автомобилей (так называемый 'опасный груз').`
	};
	const portFeeFields = [{
	  name: 'carFee',
	  label: 'Авто фі',
	  type: 'number'
	}, {
	  name: 'crossoverFee',
	  label: 'Кросовер фі',
	  type: 'number'
	}, {
	  name: 'suvFee',
	  label: 'Внедорожник фі',
	  type: 'number'
	}, {
	  name: 'motoFee',
	  label: 'Мото фі',
	  type: 'number'
	}, {
	  name: 'hybridFee',
	  label: 'Гібрид/електро фі',
	  type: 'number'
	}];
	const AuctionDeliveryFeeFields = [{
	  name: 'carFee',
	  label: 'Авто фі',
	  type: 'number'
	}, {
	  name: 'suvFee',
	  label: 'Джип фі',
	  type: 'number'
	}, {
	  name: 'motoFee',
	  label: 'Мото фі',
	  type: 'number'
	}];
	const FeeDashboard = () => {
	  const [ports, setPorts] = React.useState([]);
	  const [auctions, setAuctions] = React.useState([]);
	  const [portFees, setPortFees] = React.useState({});
	  const [AuctionDeliveryFees, setAuctionDeliveryFees] = React.useState({});
	  const [auctionLocationPorts, setAuctionLocationPorts] = React.useState([]);
	  const [initialPortFees, setInitialPortFees] = React.useState({});
	  const [initialAuctionDeliveryFees, setInitialAuctionDeliveryFees] = React.useState({});
	  const [initialAuctions, setInitialAuctions] = React.useState([]);
	  const [errors, setErrors] = React.useState({});
	  const sendNotice = designSystem.useNotice ? designSystem.useNotice() : () => {};
	  const [selectedAuctionPorts, setSelectedAuctionPorts] = React.useState({});
	  const [initialAuctionPorts, setInitialAuctionPorts] = React.useState({});
	  const [showPorts, setShowPorts] = React.useState(false);
	  const [showCopart, setShowCopart] = React.useState(false);
	  const [showIAAI, setShowIAAI] = React.useState(false);
	  React.useEffect(() => {
	    fetch('/api/locations/auction-port-all').then(r => r.json()).then(({
	      ports,
	      auctions,
	      auctionLocationPorts
	    }) => {
	      setPorts(ports);
	      setAuctions(auctions);
	      setAuctionLocationPorts(auctionLocationPorts);
	      setInitialAuctions(auctions);
	      const pf = Object.fromEntries(ports.map(p => [p.id, p.fee || {}]));
	      setPortFees(pf);
	      setInitialPortFees(JSON.parse(JSON.stringify(pf)));
	      const af = Object.fromEntries(auctions.map(a => [a.id, a.fee || {}]));
	      setAuctionDeliveryFees(af);
	      setInitialAuctionDeliveryFees(JSON.parse(JSON.stringify(af)));
	      const auctionPorts = Object.fromEntries(auctions.map(a => [a.id, auctionLocationPorts.find(l => l.auctionLocationId === a.id)?.portId ?? null]));
	      setSelectedAuctionPorts(auctionPorts);
	      setInitialAuctionPorts(JSON.parse(JSON.stringify(auctionPorts)));
	    });
	  }, []);
	  const handlePortFeeChange = (portId, name, value) => {
	    setPortFees({
	      ...portFees,
	      [portId]: {
	        ...portFees[portId],
	        [name]: value === '' ? '' : Number(value)
	      }
	    });
	  };
	  const handleAuctionDeliveryFeeChange = (auctionId, name, value) => {
	    setAuctionDeliveryFees({
	      ...AuctionDeliveryFees,
	      [auctionId]: {
	        ...AuctionDeliveryFees[auctionId],
	        [name]: value === '' ? '' : Number(value)
	      }
	    });
	  };
	  const handleAuctionPortChange = async (auctionId, portId) => {
	    await fetch('/api/locations/auction-location-port', {
	      method: 'POST',
	      headers: {
	        'Content-Type': 'application/json'
	      },
	      body: JSON.stringify({
	        auctionLocationId: auctionId,
	        portId: portId || null
	      })
	    });
	    setAuctionLocationPorts(prev => {
	      const filtered = prev.filter(link => link.auctionLocationId !== auctionId);
	      return portId ? [...filtered, {
	        auctionLocationId: auctionId,
	        portId
	      }] : filtered;
	    });
	  };
	  const getPortIdForAuction = auctionId => {
	    const link = auctionLocationPorts.find(l => l.auctionLocationId === auctionId);
	    return link ? link.portId : null;
	  };
	  const handleSaveAll = async () => {
	    await Promise.all(ports.map(port => fetch(`/api/locations/port-fees/${port.id}`, {
	      method: 'PUT',
	      headers: {
	        'Content-Type': 'application/json'
	      },
	      body: JSON.stringify(portFees[port.id])
	    })));
	    await Promise.all(auctions.map(auction => fetch(`/api/locations/auction-fees/${auction.id}`, {
	      method: 'PUT',
	      headers: {
	        'Content-Type': 'application/json'
	      },
	      body: JSON.stringify(AuctionDeliveryFees[auction.id])
	    })));
	    sendNotice({
	      message: 'Всі зміни збережено',
	      type: 'success'
	    });
	    setInitialPortFees(JSON.parse(JSON.stringify(portFees)));
	    setInitialAuctionDeliveryFees(JSON.parse(JSON.stringify(AuctionDeliveryFees)));
	    setInitialAuctions(JSON.parse(JSON.stringify(auctions)));
	    setInitialAuctionPorts(JSON.parse(JSON.stringify(selectedAuctionPorts)));
	  };
	  const handleResetAll = () => {
	    setPortFees(JSON.parse(JSON.stringify(initialPortFees)));
	    setAuctionDeliveryFees(JSON.parse(JSON.stringify(initialAuctionDeliveryFees)));
	    setAuctions(JSON.parse(JSON.stringify(initialAuctions)));
	    setErrors({});
	    sendNotice({
	      message: 'Зміни скинуто',
	      type: 'info'
	    });
	    fetch('/api/locations/auction-port-all').then(r => r.json()).then(({
	      auctionLocationPorts
	    }) => setAuctionLocationPorts(auctionLocationPorts));
	    setSelectedAuctionPorts(JSON.parse(JSON.stringify(initialAuctionPorts)));
	  };
	  const copartAuctions = auctions.filter(a => a.auctionType === 'copart');
	  const iaaiAuctions = auctions.filter(a => a.auctionType === 'iaai');
	  const portTableHeader = /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      alignItems: 'start',
	      gap: 8,
	      marginLeft: 200,
	      maxWidth: 500
	    }
	  }, /*#__PURE__*/React__default.default.createElement('div', {
	    style: {
	      width: 0
	    }
	  }), ...portFeeFields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Tooltip, {
	    title: feeTips[f.name],
	    key: f.name,
	    style: {}
	  }, /*#__PURE__*/React__default.default.createElement('img', {
	    src: feeIcons[f.name],
	    alt: f.label,
	    style: {
	      width: 40,
	      height: 'auto',
	      display: 'block',
	      margin: '0 auto'
	    }
	  }))), /*#__PURE__*/React__default.default.createElement('div', {
	    style: {
	      width: 80
	    }
	  }));
	  const auctionTableHeader = fields => /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      alignItems: 'center',
	      justifyContent: 'flex-end',
	      width: '100%',
	      marginBottom: 8
	    }
	  }, /*#__PURE__*/React__default.default.createElement('div', {
	    style: {
	      display: 'flex',
	      gap: 25,
	      alignItems: 'center',
	      marginRight: 225
	    }
	  }, ...fields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Tooltip, {
	    title: feeTips[f.name],
	    key: f.name
	  }, /*#__PURE__*/React__default.default.createElement('img', {
	    src: feeIcons[f.name],
	    alt: f.label,
	    style: {
	      width: 40,
	      height: 'auto',
	      display: 'block'
	    }
	  })))));
	  const ellipsisStyle = {
	    width: 200,
	    whiteSpace: 'nowrap',
	    overflow: 'hidden',
	    textOverflow: 'ellipsis',
	    display: 'block'
	  };
	  return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      flexDirection: 'column',
	      height: '100vh',
	      position: 'relative',
	      paddingRight: 0
	    }
	  }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      flex: 1,
	      overflowY: 'auto',
	      paddingRight: 16
	    }
	  }, /*#__PURE__*/React__default.default.createElement('h3', {
	    style: {
	      cursor: 'pointer',
	      userSelect: 'none',
	      display: 'flex',
	      alignItems: 'center',
	      gap: 8
	    },
	    onClick: () => setShowPorts(v => !v)
	  }, showPorts ? '▼' : '►', 'Порти'), showPorts && portTableHeader, showPorts && ports.map(port => /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    key: port.id,
	    mb: 'sm',
	    style: {
	      background: '#f7f7f7',
	      borderRadius: 8,
	      padding: 8,
	      display: 'flex',
	      alignItems: 'center',
	      gap: 8
	    }
	  }, /*#__PURE__*/React__default.default.createElement('div', {
	    style: {
	      fontWeight: 600,
	      ...ellipsisStyle
	    }
	  }, port.name), ...portFeeFields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
	    key: f.name,
	    type: 'number',
	    value: portFees[port.id]?.[f.name] ?? '',
	    onChange: e => handlePortFeeChange(port.id, f.name, e.target.value),
	    size: 'sm',
	    style: {
	      width: 70,
	      textAlign: 'center'
	    }
	  })))), /*#__PURE__*/React__default.default.createElement('h3', {
	    style: {
	      marginTop: 24,
	      cursor: 'pointer',
	      userSelect: 'none',
	      display: 'flex',
	      alignItems: 'center',
	      gap: 8
	    },
	    onClick: () => setShowCopart(v => !v)
	  }, showCopart ? '▼' : '►', 'Copart аукціони'), showCopart && auctionTableHeader(AuctionDeliveryFeeFields), showCopart && copartAuctions.map(auction => {
	    const selectedPortId = getPortIdForAuction(auction.id);
	    const selectedPortOption = [{
	      value: null,
	      label: '—'
	    }, ...ports.map(p => ({
	      value: p.id,
	      label: p.name
	    }))].find(opt => opt.value === selectedPortId) || null;
	    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	      key: auction.id,
	      mb: 'sm',
	      style: {
	        background: '#f7f7f7',
	        borderRadius: 8,
	        padding: 8,
	        display: 'flex',
	        alignItems: 'center',
	        gap: 8
	      }
	    }, /*#__PURE__*/React__default.default.createElement('div', {
	      style: {
	        fontWeight: 600,
	        ...ellipsisStyle
	      }
	    }, auction.name), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	      style: {
	        width: 200
	      }
	    }, /*#__PURE__*/React__default.default.createElement(designSystem.Select, {
	      value: selectedPortOption,
	      options: [{
	        value: null,
	        label: '—'
	      }, ...ports.map(p => ({
	        value: p.id,
	        label: p.name
	      }))],
	      onChange: selected => handleAuctionPortChange(auction.id, selected?.value),
	      size: 'sm',
	      style: {
	        width: '100%',
	        minWidth: '100%',
	        maxWidth: '100%',
	        whiteSpace: 'nowrap',
	        overflow: 'hidden',
	        textOverflow: 'ellipsis'
	      }
	    })), ...AuctionDeliveryFeeFields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
	      key: f.name,
	      type: 'number',
	      value: AuctionDeliveryFees[auction.id]?.[f.name] ?? '',
	      onChange: e => handleAuctionDeliveryFeeChange(auction.id, f.name, e.target.value),
	      size: 'sm',
	      style: {
	        width: 70,
	        textAlign: 'center'
	      }
	    })));
	  }), /*#__PURE__*/React__default.default.createElement('h3', {
	    style: {
	      marginTop: 24,
	      cursor: 'pointer',
	      userSelect: 'none',
	      display: 'flex',
	      alignItems: 'center',
	      gap: 8
	    },
	    onClick: () => setShowIAAI(v => !v)
	  }, showIAAI ? '▼' : '►', 'IAAI аукціони'), showIAAI && auctionTableHeader(AuctionDeliveryFeeFields), showIAAI && iaaiAuctions.map(auction => {
	    const selectedPortId = getPortIdForAuction(auction.id);
	    const selectedPortOption = [{
	      value: null,
	      label: '—'
	    }, ...ports.map(p => ({
	      value: p.id,
	      label: p.name
	    }))].find(opt => opt.value === selectedPortId) || null;
	    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	      key: auction.id,
	      mb: 'sm',
	      style: {
	        background: '#f7f7f7',
	        borderRadius: 8,
	        padding: 8,
	        display: 'flex',
	        alignItems: 'center',
	        gap: 8
	      }
	    }, /*#__PURE__*/React__default.default.createElement('div', {
	      style: {
	        fontWeight: 600,
	        ...ellipsisStyle
	      }
	    }, auction.name), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	      style: {
	        width: 200
	      }
	    }, /*#__PURE__*/React__default.default.createElement(designSystem.Select, {
	      value: selectedPortOption,
	      options: [{
	        value: null,
	        label: '—'
	      }, ...ports.map(p => ({
	        value: p.id,
	        label: p.name
	      }))],
	      onChange: selected => handleAuctionPortChange(auction.id, selected?.value),
	      size: 'sm',
	      style: {
	        width: '100%',
	        minWidth: '100%',
	        maxWidth: '100%',
	        whiteSpace: 'nowrap',
	        overflow: 'hidden',
	        textOverflow: 'ellipsis'
	      }
	    })), ...AuctionDeliveryFeeFields.map(f => /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
	      key: f.name,
	      type: 'number',
	      value: AuctionDeliveryFees[auction.id]?.[f.name] ?? '',
	      onChange: e => handleAuctionDeliveryFeeChange(auction.id, f.name, e.target.value),
	      size: 'sm',
	      style: {
	        width: 70,
	        textAlign: 'center'
	      }
	    })));
	  })), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      gap: 16,
	      justifyContent: 'flex-end',
	      padding: 16,
	      borderTop: '1px solid #eee',
	      background: '#fff',
	      position: 'sticky',
	      bottom: 0,
	      zIndex: 10
	    }
	  }, /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
	    variant: 'danger',
	    type: 'button',
	    onClick: handleResetAll
	  }, 'Відмінити'), /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
	    variant: 'primary',
	    type: 'button',
	    onClick: handleSaveAll
	  }, 'Зберегти')));
	};

	const MainDashboard = () => {
	  return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      display: 'flex',
	      flexDirection: 'row',
	      width: '100%',
	      minHeight: '90vh',
	      gap: 24
	    }
	  }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      flex: 1,
	      minWidth: 0,
	      background: '#fff',
	      borderRadius: 8,
	      boxShadow: '0 2px 8px #0001',
	      padding: 24
	    }
	  }, /*#__PURE__*/React__default.default.createElement(CalculatorDashboard, {
	    asPanel: true
	  })), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
	    style: {
	      flex: 1,
	      minWidth: 0,
	      background: '#fff',
	      borderRadius: 8,
	      boxShadow: '0 2px 8px #0001',
	      padding: 24
	    }
	  }, /*#__PURE__*/React__default.default.createElement(FeeDashboard, {
	    asPanel: true
	  })));
	};

	AdminJS.UserComponents = {};
	AdminJS.env.PUBLIC_URL = "https://dev.maks-auto.com.ua";
	AdminJS.UserComponents.UserPhotoUpload = UserPhotoUpload;
	AdminJS.UserComponents.LotPhotoUpload = LotPhotoUpload;
	AdminJS.UserComponents.ReviewPhotoUpload = ReviewPhotoUpload;
	AdminJS.UserComponents.MainDashboard = MainDashboard;

})(React, AdminJSDesignSystem, AdminJS);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
